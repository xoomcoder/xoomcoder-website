<article class="w67">
    <h2>Level 4: CRUD avec VueJS pour un CMS</h2>
    <p>
    VueJS est un outil qui permet de r√©aliser des affichages de table SQL tr√®s facilement.
    Avec Ajax et la fonction fetch en JS, on peut r√©cup√©rer du serveur un tableau d'objets au format JSON.
    Les boucles v-for de VueJS permettent alors rapidement de cr√©er un affichage sous forme de table HTML.
    </p>
    <p>
    En PHP, utiliser la m√©thode fetchAll produit les r√©sultats d'une requ√™te SQL dans un tableau de tableaux associatifs.
    Ensuite, la fonction json_encode transforme les tableaux associatifs en texte au format JSON.
    Cette chaine de production est tr√®s rapide √† coder √† PHP. 
    Pas besoin de passer par l'√©tape de cr√©er des classes "Entit√©" en Orient√©-Objet.
    avec PHP, ajouter un ORM (Object Relational Mapping) est une √©tape qui consomme beaucoup de ressources et devient inutile quand au bout, on produit du format JSON.
    En effet, les objets JS dans JSON ne sont pas typ√©s. Cela √©quivaut aux tableaux associatifs PHP, ce qui permet de cr√©er un code PHP valable pour toutes les tables SQL, sans avoir besoin de cr√©er une classe "Entity" PHP pour chaque nouvelle table SQL.
    </p>
    <p>
    En comparaison, si on regarde un peu plus en d√©tails un ORM comme Doctrine, on voit que la promesse de ne pas tenir compte de la BDD relationnelle est une illusion.
    Il y a en pratique toujours plein de code reli√© √† SQL car cela permet d'optimiser les performances.
    Avec un ORM, On passerait d'un format SQL table avec lignes et colonnes √† un objet "Entity", typ√© avec une classe PHP par table SQL, qui doit ensuite √™tre retransform√© en JSON... pour √™tre finalement affich√© sous la forme d'une table HTML avec des lignes et des colonnes ?! 
    </p>
    <p>
    SQL est un langage tr√®s puissant, car on peut cr√©er et modifier dynamiquement les tables SQL et aussi les colonnes.
    L'approche ORM perd alors ce dynamisme, car il est pr√©conis√© de cr√©er une classe par table SQL.
    Les propri√©t√©s, associ√©es √† chaque colonne SQL, doivent alors √™tre cod√©es en dur dans chaque classe... Ce qui tue le dynamisme de SQL et alourdit le code applicatif.
    C'est pour ces raisons que d√©laisser le typage par des classes PHP, et transporter les informations par des tableaux associatifs PHP, permet de rester dans la dynamique de SQL.
    Et surtout quand du c√¥t√© front, JS pr√©f√®re aussi, au final, des donn√©es non typ√©es.
    </p>
</article>

<article class="">
    <h2>Checkpoint: WebShell en https</h2>
    <p>
    Avec une connexion s√©curis√©e en https, il est maintenant moins expos√© de fournir une API de gestion de l'h√©bergement, directement dans l'administration d'un CMS.
    Quand vous avez les comp√©tences d√©veloppeur, c'est r√©guli√®rement utile de pouvoir manipuler le code directement.
    Un WebShell permet de g√©rer les dossiers et les fichiers de l'h√©bergement.
    Et une console SQL permet de lancer des requ√™tes SQL sur la base de donn√©es.
    Du c√¥t√© back, cette API ajoute aussi un framework pratique pour composer des requ√™tes AJAX.
    L'API ajax permet de choisir le nom de la propri√©t√© JSON qui va recevoir les informations demand√©es.
    Cette architecture se rapproche de GraphQL car dans une seule requ√™te, on peut envoyer plusieurs instructions au serveur.
    Il est ainsi possible d'enchainer un "create" et plusieurs "read" en une seule requ√™te.
    Toutes ces possibilit√©s forment un nouveau mini-langage de programmation ?! 
    </p>
    <pre>
üî• Gestion des fichiers (CRUD).
üî• Upload de fichiers.
üî• G√©n√©rateur de code (Class builder).
üî• Envoi de requ√™tes SQL (CRUD, etc...).
üî• Envoi de mails.
üî• Ex√©cution de code PHP avec la fonction eval.
üî• Ex√©cution de code JS en callback Ajax avec eval.
    </pre>
</article>

<article class="">
    <h2>Checkpoint: SEO avec YouTube</h2>
    <p>
    Le r√©f√©rencement des mots cl√© avec YouTube est vraiment impressionnant ! 
    Une vid√©o publi√©e hier est d√©j√† bien class√©e dans le r√©sultats de recherche Google, avec les mots cl√© "coder vuejs 3".
    La vid√©o dure moins de 3 minutes et propose tr√®s peu de contenu texte.
    Et cette vid√©o r√©cente se positionne d√©j√† en 2√® r√©sultat Videos sur la recherche "g√©n√©rale" et dans les 10 premiers en recherche "video".
    </p>
</article>
<script type="text/xoomcoder">
        <img class="h50" src="assets/news/screenshot-2020-08-28-coder-vuejs-3-recherche-google.png" alt="coder vuejs 3">
        <img class="h50" src="assets/news/screenshot-2020-08-28-coder-vuejs-3-recherche-google-video.png" alt="coder vuejs 3 video">
</script>

<article class="w67">
    <h2>Checkpoint: VSCode comme CMS</h2>
    <p>
    Comme point d'√©tapes sur les premi√®res semaines de d√©veloppement du site, il y a plusieurs r√©flexions √©tonnantes.
    </p>
    <p>
    Une fois que le nom de domaine et l'h√©bergement sont lou√©s, il faut commencer par publier une landing page pour d√©clencher le r√©f√©rencement des moteurs de recherche.
    Cela prend quelques semaines et il faut aller pousser Google avec la search console pour l'encourager √† indexer votre site.
    De plus, Google Search Console d√©tecte les probl√®mes d'UX (User Experience) pour la version mobile.
    Il faut aussi valider votre score avec des outils comme web.dev pour mesurer les diff√©rents signaux importants. 
    Comme le projet est li√© √† des vid√©os, le plus simple est de passer par YouTube, pour publier les vid√©os, et ensuite int√©grer le lecteur sur le site.
    Grande surprise: le compte YouTube et les vid√©os sont tr√®s rapidement r√©f√©renc√©s, de quelques heures √† quelques jours, compar√© √† des semaines pour les pages d'un site.    
    </p>
    <p>
    Pour obtenir un bon r√©f√©rencement d'une page, les conseils SEO vous encouragent √† publier des contenus de plusieurs milliers de mots (2000 √† 4000 mots par page).
    C'est un travail consid√©rable et par cons√©quent, la strat√©gie est plut√¥t de cr√©er peu de pages, avec beaucoup de contenu sur chaque page.
    Et pour les visiteurs, il faut a√©rer et illustrer avec des images ou des photos.
    Techniquement, il n'y a pas besoin d'un framework, ni d'un CMS tr√®s √©volu√© pour d√©marrer.
    </p>
    <p>
    Pour coder, l'atelier VSCode est devenu en quelques ann√©es un outil incontournable, car gratuit et tr√®s extensible.
    C'est Microsoft qui nous fait profiter de d√©cennies d'exp√©rience dans les ateliers logiciels comme Visual Studio.
    Tout en retrouvant l'aspect ouvert des anciens ateliers comme Emacs ou Eclipse.
    </p>
    <p>
    Comme GitHub est aussi maintenant une entreprise Microsoft, c'est facile de connecter son VSCode √† un repository sur GitHub.com pour g√©rer son code. 
    Cela fournit un historique puissant et une sauvegarde gratuite sur un serveur hors de l'ordinateur.
    </p>
    <p>
    Avec un h√©bergement qui propose un acc√®s SSH et le programme git, on peut ensuite utiliser un webhook de GitHub.com pour d√©clencher un "git pull" automatiquement.
    Le code sur l'h√©bergement est obtenu avec un "git clone" du repository GitHub.com et ensuite, le webhook va d√©clencher automatiquement le "git pull".
    </p>
    <p>
    Sur mon ordinateur sous Windows, j'utilise WSL2 (Windows Subsystem Linux 2) pour avoir une machine virtuelle sous Ubuntu.
    WSL2 s'int√®gre aussi directement dans VSCode. Cela permet de cr√©er un environnement de d√©veloppement en local pour tester son code. 
    Et ensuite, il suffit de cr√©er des sauvegardes r√©guli√®res avec des "git commit". 
    Enfin pour mettre le code en production sur l'h√©bergement, il suffit de faire un "git push".
    La synchronisation de mon code avec le repository GitHub d√©clenche √† son tour la synchro avec l'h√©bergement.
    C'est une mise en production rapide et facile. 
    </p>
    <p>
    Les langages √† pratiquer pour cr√©er de bonnes pages web: HTML, CSS, un peu de JS et aussi des bases de PHP.
    Et en quelques semaines, vous pouvez coder vous-m√™me un site Vitrine avec une page Blog (sans base de donn√©es).
    (Si vous √™tes press√©s, le code de ce site est en ligne sur GitHub.com...)
    </p>   
</article>


<article>
    <h2>Level 4: Ajout de page admin avec VueJS v3</h2>
    <p>VueJS version3 devrait devenir disponible bient√¥t. En attendant, on peut d√©j√† l'utiliser.</p>
    <p>https://v3.vuejs.org/guide/installation.html#release-notes</p>
    <p>Pour la partie admin, nous allons nous baser sur VueJS v3. Le code de d√©marrage est un peu plus complexe que pour la v2.</p>
    <p>Une partie admin ne doit pas √™tre index√©e par les moteurs de recherche. Dans cette situation, l'utilisation intensive de JS nous apporte beaucoup plus de facilit√©s pour le d√©veloppeur. Les utilisateurs profitent aussi d'une meilleure exp√©rience (UX). Et les moteurs de recherche comprennent tr√®s mal le contenu produit par JS et l'indexent mal, ce qui est bien le r√©sultat recherch√© pour cette page d'administration.</p>
</article>

<article>
    <h2>Level 3: tutoriels sur VueJS 3 en framework front</h2>
    <p>
        VueJS 3 va bient√¥t devenir la nouvelle version officielle.
        Dans les 3 principaux frameworks front, on peut nommer React, Angular et Vue.
        Cette version VueJS 3 est une √©volution importante pour le framework qui a rapidement gagn√© en popularit√© ces derni√®res ann√©es.
        Un des aspects tr√®s int√©ressant est la prise en main tr√®s facile pour commencer √† manipuler les possibilit√©s des frameworks front.
        VueJS propose un package complet en un seul fichier. 
        Il suffit de l'ajouter dans votre page HTML et vous pouvez directement utiliser VueJS !
        Si vous comparez avec React ou Angular, vous allez vous apercevoir que c'est beaucoup plus lourd pour d√©marrer avec React et Angular.
        Pour coder avec VueJS, on utilise du JS moderne mais aussi des ajouts assez proches du JS.
        React pr√©f√®re JSX et Angular pr√©f√®re TypeScript.
        Ensuite si vous voulez pousser VueJS pour un projet plus complexe, il est aussi √©videmment possible de cr√©er des composants compil√©s c√¥t√© serveur, avec nodeJS et npm...
    </p>
    <p>
        Pour suivre les actualit√©s, visitez cette page: 
        https://news.vuejs.org/
    </p>
</article>

<article>
    <h2>Level 3: Ajout d'une page installation</h2>
    <p>
        Pour g√©rer le contenu du site, il faut cr√©er un compte administrateur.
        La page d'installation demande l'email de l'administrateur. 
        Et le traitement du formulaire envoie une cl√© admin sur cet email.
        Ensuite, il y a un 2e formulaire d'activation pour valider que l'adresse email est correcte.
        Il faut alors fournir l'email et la cl√© envoy√©e sur cette boite email.
        Une fois le compte administrateur cr√©√©, les 2 formulaires sont d√©sactiv√©s: 
        il devient impossible de cr√©er un nouveau compte adminitrateur.
    </p>
</article>

<article>
    <h2>Level 3: Blog en POO sans BDD</h2>
    <p>Le site XoomCoder arrive maintenant au niveau 3. On ajoute en premier une page news pour les actualit√©s.</p>
    <p>Pour le SEO, il n'y a pas encore suffisamment de contenu dans chaque article pour les s√©parer dans une page √† part. Pour le moment, tous les articles sont dans la page news.</p>
    <p>Sur la page contact, il y a aussi un formulaire pour laisser un message. L'envoi du formulaire est r√©alis√© en Ajax, sans chargement de la page.</p>
    <p>Comme souvent en d√©veloppement local, il n'y a pas de serveur d'email. Il y a maintenant la possibilit√© d'ajouter un code local pour personnaliser ces fonctionnalit√©s. La Programmation Par Classes (PPC) permet de ranger facilement son code.</p>
</article>

<article>
    <h2>Level 3: Programmation Orient√©-Objet</h2>
    <p>
        Avec PHP, il faut vraiment passer rapidement de la programmation fonctionnelle √† la programmation orient√©-objet (POO).
        En effet, PHP propose pour la programmation Orient√©-Objet un m√©canisme de chargement automatique de classes.
        Une fois ce m√©canisme install√©, le d√©veloppeur peut se concentrer sur l'organisation de son code dans diff√©rentes les classes.
        PHP pourra charger automatiquement le code n√©cessaire, et seulement au moment o√π l'ex√©cution du code en a besoin.
    </p>
    <p>
        Il y a donc un grand gain en termes de performances, puisque que PHP ne chargera que le code n√©cessaire, au dernier moment.
        Le d√©veloppeur peut capitaliser son code dans des classes.
        Et de plus, un code incorrect n'aura pas de cons√©quences sur le reste de l'application si il n'a pas besoin d'√™tre ex√©cut√©.
    </p>
    <p>
        En conclusion: c'est un "must" que de programmer en Orient√©-Objet avec PHP. Et c'est bien le niveau demand√© dans les entreprises.
    </p>
</article>

<article>
    <h2>Level 3: Blog et astuce SEO</h2>
    <p>
        Les sites ont besoin des moteurs de recherche pour √™tre bien r√©f√©renc√©s dans les r√©sultats de recherche des visiteurs.
        Mais il faut aussi voir que les moteurs de recherche ont aussi besoin d'√™tre meilleurs que leurs concurrents.
        Le point crucial se focalise sur les actualit√©s. Les internautes veulent avoir les derni√®res nouvelles et quasiment en temps r√©el.
        Les moteurs de recherche doivent donc rep√©rer les sites qui sont √† la pointe sur les derni√®res nouvelles selon les domaines populaires.
        Votre site sera forc√©ment mieux r√©f√©renc√© que celui de votre concurrent si vous publiez r√©guli√®rement des nouveaut√©s en lien avec les actualit√©s.
        Si on regarde l'histoire des sites, c'est le conseil qu'on donnait aux clients qui voulaient que leur site vitrine soit mieux r√©f√©renc√© que le site vitrine du concurrent.
        En ajoutant une page de "blog", "news", "actus", etc... Le site donne un signal fort aux moteurs de recherche qu'il est un site o√π il y a aura des contenus r√©guli√®rement et r√©cents.
        Google viendra consulter les pages plus souvent et les pages vont gagner des positions car elles vont proposer des contenus plus frais que les autres.
        Et pour pouvoir publier du contenu r√©guli√®rement, il faut √©videmment un outil bien adapt√© pour ce travail: il faut un Content Management System (CMS).
        C'est une des cl√©s du succ√®s de WordPress, qui est utilis√© pour publier plus de 35% des sites actuellement. 
    </p>
    <p>
        Par exemple: pour cette page d'actualit√©s, comme le site porte sur le d√©veloppement web fullstack, il est int√©ressant de publier du contenu sur les prochaines sorties des frameworks.
        Sur la partie front, VueJS 3 √©tait annonc√© pour ces derni√®res semaines. Le code du noyau VueJS 3 est pr√™t et ce sont plut√¥t les extensions et la documentation qui doivent maintenant se mettre √† niveau.
        On peut essayer de gagner en r√©f√©rencement sur VueJS 3 et aussi tout son √©cosyst√®me. 
    </p>
</article>
